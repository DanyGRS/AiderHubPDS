@model IEnumerable<AiderHubAtual.Models.Evento>
@{
    ViewData["Title"] = "View";
    Layout = "_LayoutOng";
}
<head>
    <link rel="stylesheet" href="~/css/StyleHome.css" />
</head>
<body>
    @if (Model.Count() < 1)
    {
        <div class="d-flex flex-column align-items-start text-white">
            <p>
                Você ainda não possui nenhum evento cadastrado.
            </p>
        </div>
    }
    else
    {

        var eventosAtivos = Model.Where(item => item.Status != false);
        var eventosEncerrados = Model.Where(item => item.Status == false);

        <a asp-action="Create" class="btn btn-outline-light">@language.GetKey("Create")</a>

        <hr @(eventosAtivos.Count() < 1 ? "hidden" : String.Empty)/>

        <div class=" flex-column">
            <h4 class="text-white" @(eventosAtivos.Count() < 1 ? "hidden" : String.Empty)>Ativos</h4>
            <div class="card-container">
                @foreach (var item in eventosAtivos)
                {
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">@item.Titulo</h5>
                            <p class="card-text">@language.GetKey("Date"): @item.Data_Evento.ToString("d") - @item.Hora_Evento</p>
                            <p class="card-text">@language.GetKey("Address"):  @item.Logradouro, @item.Numero - @item.Bairro</p>
                            <p class="card-text">@language.GetKey("Workload"): @item.Carga_Horaria</p>
                            <p class="card-text">@language.GetKey("Manager"): @item.Responsavel</p>

                            <a asp-action="Details" asp-route-id="@item.id_Evento" class="btn btn-primary btn-sm">@language.GetKey("Details")</a>
                            @if (item.Status != false)
                            {
                                <a asp-action="Encerrar" asp-route-id="@item.id_Evento" class="btn btn-danger btn-sm">@language.GetKey("End")</a>
                                <a asp-action="DeletarEvento" asp-route-id="@item.id_Evento" class="btn btn-warning btn-sm">@language.GetKey("Delete")</a>
                                <a asp-action="Edit" asp-route-id="@item.id_Evento" class="btn btn-secondary btn-sm">@language.GetKey("Edit")</a>
                            }
                        </div>
                    </div>
                }
            </div>

            <hr @(eventosEncerrados.Count() < 1 ? "hidden" : String.Empty)/>
            <h4 class="text-white" @(eventosEncerrados.Count() < 1 ? "hidden" : String.Empty)>Encerrados</h4>
            <div class="card-container">
                @foreach (var item in eventosEncerrados)
                {
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">@item.Titulo)</h5>
                            <p class="card-text">@language.GetKey("Date"): @item.Data_Evento.ToString("d") - @item.Hora_Evento</p>
                            <p class="card-text">@language.GetKey("Address"):  @item.Logradouro, @item.Numero - @item.Bairro</p>
                            <p class="card-text">@language.GetKey("Workload"): @item.Carga_Horaria</p>
                            <p class="card-text">@language.GetKey("Manager"): @item.Responsavel</p>

                            <a asp-action="Details" asp-route-id="@item.id_Evento" class="btn btn-primary btn-sm">@language.GetKey("Details")</a>
                            @if (item.Status != false)
                            {
                                <a asp-action="Encerrar" asp-route-id="@item.id_Evento" class="btn btn-danger btn-sm">@language.GetKey("End")</a>
                                <a asp-action="DeletarEvento" asp-route-id="@item.id_Evento" class="btn btn-warning btn-sm">@language.GetKey("Delete")</a>
                                <a asp-action="Edit" asp-route-id="@item.id_Evento" class="btn btn-secondary btn-sm">@language.GetKey("Edit")</a>
                            }
                        </div>
                    </div>


                }
            </div>
        </div>

    }
</body>
<style>

    .card-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px; /* Espaçamento entre os cards */
    }

    .card {
        width: calc(33.33% - 20px); /* 33.33% para 3 colunas por linha e subtrai o espaço entre eles */
        /* Adicione outros estilos de card conforme necessário */
    }

    hr {
        color: #FF7E0D;
        height: 3px;
        background-color: #FF7E0D;
        border: none;
        margin-top: 10px;
        margin-bottom: 20px;
    }
</style>
